apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: '{"kind":"Deployment","apiVersion":"extensions/v1beta1","metadata":{"name":"kube-dns","namespace":"kube-system","creationTimestamp":null,"labels":{"k8s-addon":"kube-dns.addons.k8s.io","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true"}},"spec":{"selector":{"matchLabels":{"k8s-app":"kube-dns"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"k8s-app":"kube-dns"},"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":"","scheduler.alpha.kubernetes.io/tolerations":"[{\"key\":\"CriticalAddonsOnly\",
      \"operator\":\"Exists\"}]"}},"spec":{"containers":[{"name":"kubedns","image":"gcr.io/google_containers/kubedns-amd64:1.9","args":["--domain=cluster.local.","--dns-port=10053","--config-map=kube-dns","--v=2"],"ports":[{"name":"dns-local","containerPort":10053,"protocol":"UDP"},{"name":"dns-tcp-local","containerPort":10053,"protocol":"TCP"},{"name":"metrics","containerPort":10055,"protocol":"TCP"}],"env":[{"name":"PROMETHEUS_PORT","value":"10055"}],"resources":{"limits":{"memory":"170Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"livenessProbe":{"httpGet":{"path":"/healthz-kubedns","port":8080,"scheme":"HTTP"},"initialDelaySeconds":60,"timeoutSeconds":5,"successThreshold":1,"failureThreshold":5},"readinessProbe":{"httpGet":{"path":"/readiness","port":8081,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":5}},{"name":"dnsmasq","image":"gcr.io/google_containers/kube-dnsmasq-amd64:1.4","args":["--cache-size=1000","--no-resolv","--server=127.0.0.1#10053","--log-facility=-"],"ports":[{"name":"dns","containerPort":53,"protocol":"UDP"},{"name":"dns-tcp","containerPort":53,"protocol":"TCP"}],"resources":{"requests":{"cpu":"150m","memory":"10Mi"}},"livenessProbe":{"httpGet":{"path":"/healthz-dnsmasq","port":8080,"scheme":"HTTP"},"initialDelaySeconds":60,"timeoutSeconds":5,"successThreshold":1,"failureThreshold":5}},{"name":"dnsmasq-metrics","image":"gcr.io/google_containers/dnsmasq-metrics-amd64:1.0","args":["--v=2","--logtostderr"],"ports":[{"name":"metrics","containerPort":10054,"protocol":"TCP"}],"resources":{"requests":{"memory":"10Mi"}},"livenessProbe":{"httpGet":{"path":"/metrics","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"timeoutSeconds":5,"successThreshold":1,"failureThreshold":5}},{"name":"healthz","image":"gcr.io/google_containers/exechealthz-amd64:1.2","args":["--cmd=nslookup
      kubernetes.default.svc.cluster.local 127.0.0.1 \u003e/dev/null","--url=/healthz-dnsmasq","--cmd=nslookup
      kubernetes.default.svc.cluster.local 127.0.0.1:10053 \u003e/dev/null","--url=/healthz-kubedns","--port=8080","--quiet"],"ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"memory":"50Mi"},"requests":{"cpu":"10m","memory":"50Mi"}}}],"dnsPolicy":"Default"}},"strategy":{"rollingUpdate":{"maxUnavailable":0,"maxSurge":"10%"}}},"status":{}}'
  labels:
    k8s-addon: kube-dns.addons.k8s.io
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
  name: kube-dns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxSurge: 10%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly",
          "operator":"Exists"}]'
      creationTimestamp: null
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - --domain=${KUBE_DNS_DOMAIN}
        - --dns-port=10053
        - --config-map=kube-dns
        - --v=2
        env:
        - name: PROMETHEUS_PORT
          value: "10055"
        image: gcr.io/google_containers/kubedns-amd64:1.9
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz-kubedns
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: kubedns
        ports:
        - containerPort: 10053
          name: dns-local
          protocol: UDP
        - containerPort: 10053
          name: dns-tcp-local
          protocol: TCP
        - containerPort: 10055
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readiness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        terminationMessagePath: /dev/termination-log
      - args:
        - --cache-size=1000
        - --no-resolv
        - --server=127.0.0.1#10053
        - --log-facility=-
        image: gcr.io/google_containers/kube-dnsmasq-amd64:1.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz-dnsmasq
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: dnsmasq
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        resources:
          requests:
            cpu: 150m
            memory: 10Mi
        terminationMessagePath: /dev/termination-log
      - args:
        - --v=2
        - --logtostderr
        image: gcr.io/google_containers/dnsmasq-metrics-amd64:1.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /metrics
            port: 10054
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: dnsmasq-metrics
        ports:
        - containerPort: 10054
          name: metrics
          protocol: TCP
        resources:
          requests:
            memory: 10Mi
        terminationMessagePath: /dev/termination-log
      - args:
        - --cmd=nslookup kubernetes.default.svc.cluster.local 127.0.0.1 >/dev/null
        - --url=/healthz-dnsmasq
        - --cmd=nslookup kubernetes.default.svc.cluster.local 127.0.0.1:10053 >/dev/null
        - --url=/healthz-kubedns
        - --port=8080
        - --quiet
        image: gcr.io/google_containers/exechealthz-amd64:1.2
        imagePullPolicy: IfNotPresent
        name: healthz
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
      dnsPolicy: Default
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
